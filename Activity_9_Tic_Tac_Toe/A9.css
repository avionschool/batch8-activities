/*px - set value and will always be the value
vh & vw - 1vw = 1% of the total height or width. Your items/elements will adjust depending on the screen size
% - will take up the percentage of the parent
rem - based on the default font-size. 1rem is = to 16px
em - nesting on the parent element(not recommended)

relative = allows you to move the element top right bottom left
absolute = like relative but the element is removed from the flow of the document and other elements will behave as if itâ€™s not even there
fixed = won't move the element even if you scroll*/

/*Body*/
*{
    margin: 0px;
    padding: 0px;
    font-family: 'Kalam', cursive;
    cursor: pointer;
}

.header{
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 800px;
    height: 50px;
    margin: 30px 0px 70px 0px;   
}

.container{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    height: 100vh;
    width: 100vw;
    /*so we can control the entire screen and center the elements/items*/
}

/*Tic-Tac-Toe Board*/
.board{
    display: grid;
    grid-template-columns: repeat(3, 100px);
    /*how many columns you want and what size horizontally*/
    grid-template-rows: repeat(3, 100px);
    /*how many rows you want and what size vertically*/
}

#rightBorder{
    border-style: none solid none none;
}
#topRightBorder{
    border-style: solid solid none none;
}
#topBorder{
    border-style: solid none none none;
}
/*top right bottom left*/

.cell{
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: white;
    border: 5px none green;
    position: relative;
}

/*::before selector inserts something before the content of each selected element(s)
::after selector to insert something after the content
Need to use pseudo elemets ::before ::after to create shapes of X and O*/
.cell.X,
.cell.O {
    cursor: not-allowed;
}

/*x symbol*/
/*whenever x=class/o=class is called in the id=cell and everytime you hover to any id cell this will display*/
.cell.X::before,
.cell.X::after,
.board.X .cell:not(.X):not(.O):hover::before,
.board.X .cell:not(.X):not(.O):hover::after{
/*you need ":not(.X):not(.X)" to tell them to not excute the below code if it runs through these class*/
    content: '';
    /*content needs to be empty so it can display the shapes of ::before and ::after in the content*/
}
.cell.X::before,
.board.X .cell:not(.X):not(.O):hover::before{
/*you need to place hover here because you need this transform design*/
    transform: rotate(45deg);
    width: 9px;
    height: 80px;
    background-color: red;
    position: absolute;
    /*we remove the before and after rectangles from the flow so it overlaps each other
    the parent should always be in position-relative*/
}
.cell.X::after,
.board.X .cell:not(.X):not(.O):hover::after{
    transform: rotate(-45deg);
    width: 9px;
    height: 80px;
    background-color: red;
    position: absolute;
}

/*you need to redeclare this and declare hover code*/
.cell.X::before,
.cell.X::after {
    background-color: red;
}
.board.X .cell:not(.X):not(.O):hover::before,
.board.X .cell:not(.X):not(.O):hover::after {
    background-color: lightgray;
}

/*o symbol*/
.cell.O::before,
.cell.O::after,
.board.O .cell:not(.X):not(.O):hover::before,
.board.O .cell:not(.X):not(.O):hover::after {
    content: '';
}
.cell.O::before,
.board.O .cell:not(.X):not(.O):hover::before{
    width: 80px;
    height: 80px;
    border-radius: 50%;
    background-color: blue;
    position: absolute;
}
.cell.O::after,
.board.O .cell:not(.X):not(.O):hover::after{
    width: 65px;
    height: 65px;
    border-radius: 50%;
    background-color: white;
    position: absolute;
}

.cell.O::before{
    background-color: blue;
}
.cell.O::after{
    background-color: white;
}
.board.O .cell:not(.X):not(.O):hover::before{
    background-color: lightgrey;
}
.board.O .cell:not(.X):not(.O):hover::after{
    background-color: white;
}

/*Status*/
.status{
    display: flex;
    justify-content: space-around;
    align-items: center;
    border: 0px solid transparent;
    height: 50px;
    width: 350px;
}

/*Pop-up*/
.popUp{
    visibility: hidden;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    border: 5px solid green;
    border-radius: 25px;
    background-color: white;
    height: 150px;
    width: 250px;
    position: absolute;
    margin: 220px 700px 0px 0px;
}

.popUpTwo{
    visibility: hidden;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    border: 5px solid green;
    border-radius: 25px;
    background-color: white;
    height: 280px;
    width: 250px;
    position: absolute;
    margin: 150px 0px 0px 700px;
    padding-top: 10px;
}

.show{
    visibility: visible;
}

.winMessage{
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 60%;
}

.buttons{
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: flex-start;
    height: 100%;
    width: 40%;
}

.button{
    background-color: white;
    border: 2px solid blue;
    border-radius: 25px;
    height: 25px;
    width: 70px;
}

.fontRed{
    color: red;
    font-weight: bold;
}

.fontBlue{
    color: blue;
    font-weight: bold;
}

.fontGreen{
    color: green;
    font-weight: bold;
}

.centerPoints{
    text-align: center;
}

.underline{
    text-decoration: underline;
}