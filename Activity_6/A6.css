*{
    cursor: pointer;
}

body{
    margin: 0;
    padding: 0;
    font-family: cursive;
}

h1, h2{
    font-size: 30px;
    transition: font-size 1s;
}

h1:hover{
    font-size: 35px;
}

h2:hover{
    font-size: 35px;
}

dt{
    font-size: 18px;
    transition: font-size 1.5s;
}

dt:hover{
    font-size: 21px;
}

dd{
    font-size: 15px;
    transition: font-size 1.5s;
}

dd:hover{
    font-size: 16px;
}

#particles-js
{
/*Don't touch*/
    z-index: -1;
    width: 100vw;
    position: absolute;
    background:white;
    background-image: url("");
    background-repeat: no-repeat;
    background-size: cover;
    overflow: hidden;
}

.mainGrid{
    /*background-color: grey;*/
    height: 100vh;
    display: grid;
    grid-template-columns: 1fr 1fr;
/*You are only controlling blue and green since red is already a header*/    
    grid-template-rows: 130px 400px 400px;
/*You can control all your grid*/
    grid-column-gap: 10px;
    grid-row-gap: 10px;
    grid-template-areas:
    "header header"
    /*"footer footer";*/
}

.header{
    /*background-color: red;*/
    /*border-style: solid;*/
    display: grid;
    grid-area: header;
    justify-content: center;
    align-content: center;
}

.mainHeaderFlex{
    background-color: transparent;
    height: 110px;
    width: 1000px;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
}

.flexHeaderOne{
    background-color: transparent;
    height: 50px;
    width: 400px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.flexHeaderTwo{
    background-color: white;
/*Need background color for it not to be transparent*/
    border-style: solid;
    border-radius: 25px;
    width: 500px;
    height: 60px;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
}

.button{
    font-family: cursive;
    background-color: transparent;
    border: none;
    outline: none;
/*to remove border outline after clicking*/
    /*transition: background-color 1s;
this is for another design*/
    font-size: 15px;
    transition: /*color 1.5s,*/ font-weight 1.5s, font-size 1.5s, transform 1.5s;
    /*ease ease-in ease-out*/
}

.button:hover{
    /*background-color: lightskyblue;*/
    color: darkgray;
    font-weight: bold;
    font-size: 20px;
    transform: rotateZ(360deg);
}

/*.footer{
    background-color: yellow;
    border-style: solid;
    margin: 10px;
    display: grid;
    grid-area: footer;
}*/

.instructionsGrid{
    /*background-color: blue;*/
    border-style: solid;
    border-radius: 25px;
    margin-left: 100px;
    background-color: white;
/*Need background color for it not to be transparent*/
    display: grid;
    overflow: auto;
/*I don't know why I need two overflow: auto for the slidebar to not spill*/
}

.instructionsFlex{
    /*background-color: brown;*/
    /*border-style: solid;*/
    padding-left: 10px;
    padding-right: 10px;
    padding-bottom: 10px;
    padding-top: 0px;
    display: flex;
    flex-direction: column;
    align-items: center;
    overflow: auto;
/*I don't know why I need two overflow: auto for the slidebar to not spill*/
}

.gridChessBoard{
    /*background-color: green;*/
    /*border-style: solid;*/
    margin-right: 100px;
    display: grid;
    grid-template-columns: repeat(8, 3.8vw);    
    grid-template-rows: repeat(8, 3.8vw);
/*Adjust size to see what you are moving and counting*/
    justify-content: center;
    align-content: center;
}

.gridBoxGrey{
    background-color: grey;
    border-style: solid;
    display: grid;
}

.gridBoxWhite{
    background-color: white;
    border-style: solid;
    display: grid;
}

.bMoveOne{
    animation-name: bMoveOne;
    animation-duration: 2.5s;
    animation-fill-mode: forwards;
/*to end at Y*/    
    animation-delay: 2s;
/*delay before the animation starts*/    
    animation-iteration-count: infinite;
/*inifinite looping*/    
    animation-direction: alternate;
/*play forwards then backwards*/    
    animation-timing-function: linear;
/*to maintain animation speed*/
}

@keyframes bMoveOne{
    from{ transform: translate(0px)}
    to{ transform: translateY(100px)}
}

.bMoveTwo{
    animation-name: bMoveTwo;
    animation-duration: 2.5s;
    animation-fill-mode: forwards;
    animation-delay: 2s;  
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;
}

@keyframes bMoveTwo{
    from{ transform: translate(0px)}
    to{ transform: translate(145px, 145px)}
}

.bMoveThree{
    animation-name: bMoveThree;
    animation-duration: 2.5s;
    animation-fill-mode: forwards;
    animation-delay: 2s;  
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;
}

@keyframes bMoveThree{
    from{ transform: translate(0px)}
    to{ transform: translate(-195px, 195px)}
}

.bMoveFour{
    animation-name: bMoveFour;
    animation-duration: 2.5s;
    animation-fill-mode: forwards;
    animation-delay: 2s;  
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;
}

@keyframes bMoveFour{
    from{ transform: translate(0px)}
    to{ transform: translate(97px, 97px)}
}

.wMoveOne{
    animation-name: wMoveOne;
    animation-duration: 2.5s;
    animation-fill-mode: forwards;
    animation-delay: 2s;  
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;
}

@keyframes wMoveOne{
    from{ transform: translate(0px)}
    to{ transform: translateY(-100px)}
}

.wMoveTwo{
    animation-name: wMoveTwo;
    animation-duration: 2.5s;
    animation-fill-mode: forwards;
    animation-delay: 2s;  
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;
}

@keyframes wMoveTwo{
    from{ transform: translate(0px)}
    to{ transform: translate(50px, -100px)}
}

.wMoveThree{
    animation-name: wMoveThree;
    animation-duration: 2.5s;
    animation-fill-mode: forwards;
    animation-delay: 2s;  
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;
}

@keyframes wMoveThree{
    from{ transform: translate(0px)}
    to{ transform: translate(-50px, -100px)}
}

/*  Moving items
    transform: translateX(-0px);
    transform: translateY(-0px);
    transform: translate(-0px, 0px);

    Making items bigger
    transform: scaleX(0px);
    transform: scaleY(0px);
    transform: scale(0px 0px);

    Rotating items
    transform: rotateX(0deg);
    transform: rotateY(0deg);
    transform: rotateZ(0deg);
*/